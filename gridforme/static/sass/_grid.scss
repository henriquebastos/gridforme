/*
 * Estruturas de Colunas fixas
 */

@for $i from 1 through $basal-col-number {

    .desktop-#{$i} {
        max-width: $basal-col-fixed * $i;
    }

    .desktop-#{$i} {
        float: left;
        width: 100%;
    }

}

/* Colunas usando porcentagem */
@each $i in 20, 25, 30, 33, 40, 50, 60, 66, 70, 75 {
    .col-#{$i} {
        width: #{$i}.0%;
        float: left;
    }
}

.col { overflow: hidden; }


/*
* Anula o float e centraliza o <div> da coluna.
*/

.container { margin: 0 auto; float: none; }

/*
* Esconde o elemento HTML em diferente modos de apresentação
*
*/

.hide,
.hide-desktop { display: none; }
.screen-reader-only { position: absolute; visibility: hidden; }


/*
* Aplica o espaço de entrelinha no Padding ou na Margin da caixa
* Deve ser aplicado em caixas (<div>,<header>,<section>,<articles>)
*
*/

@for $i from 1 through 5 {

    .padding-top-#{$i} {
        padding-top: $basal-leading * $i;
    }
}

@for $i from 1 through 5 {

    .padding-bottom-#{$i} {
        padding-bottom: $basal-leading * $i;
    }
}

@for $i from 1 through 5 {

    .margin-top-#{$i} {
        margin-top: $basal-leading * $i;
    }
}

@for $i from 1 through 5 {

    .margin-bottom-#{$i} {
        margin-bottom: $basal-leading * $i;
    }
}


/*
* Aplica um espaço em tamanho de coluna correspondente,
* ao lado esquerdo (col-left) e ao lado direito (col-right)
*/

@for $i from 1 through $basal-col-number - 1 {

    .col-left-#{$i} {
        margin-left: $basal-col-fixed * $i;
    }
}

@for $i from 1 through $basal-col-number - 1 {

    .col-right-#{$i} {
        margin-right: $basal-col-fixed * $i;
    }
}

/*
* Aplica o gutter entre as colunas usando o padding interno de cada coluna aplicada.
*
*/

.gutter {
    padding-left: $basal-gutter;
    padding-right: $basal-gutter;
}

.gutter-left  { padding-left: $basal-gutter;  }

.gutter-right { padding-right: $basal-gutter; }


/*
    Altura mínima do elemento HTML
    Tem momentos que você precisa de uma altura mínima do elemento HTML.
    Esta classe especifica a altura mínima, sem atrapalhar caso cresça a quantidade de elemntos na caixa.
    Ex: Um uso comum é aplicar a altura mínima numa linha: <div class="row min-h-7">
*/

@for $i from 1 through 40 {

    .min-h-#{$i} {
        min-height: $basal-leading * $i;
    }
}

/*
    Altura máxima do bloco HTML
    Ex: Um uso comum é aplicar a altura mínima numa linha: <div class="row min-h-7">
*/

@for $i from 1 through 20 {

    .max-h-#{$i} {
        height: $basal-leading * $i;
        min-height: 1em;
        overflow: hidden;
    }
}

/* Primeiro ajuste de layout, quando menos que o tamanho máximo + 10 pixels */

@media screen and  (max-width: ($basal-max-width + 10) ) {

    @for $i from 1 through $basal-col-number {

        .desktop-#{$i} {
            width: 8% * $i;
        }
    }

    @for $i from 1 through $basal-col-number - 1 {

        .col-left-#{$i} {
            margin-left: 8% * $i;
        }
    }

    @for $i from 1 through $basal-col-number - 1 {

        .col-right-#{$i} {
            margin-right: 8% * $i;
        }
    }

    @for $i from 1 through 20 {

        .max-h-#{$i} {
            height: auto;
            min-height: 1em;
            overflow: hidden;
        }
    }

}
/* FIM do primeiro ajuste de layout */

@media screen and  (max-width: 800px){

    @for $i from 1 through $basal-col-number {
        .desktop-#{$i} {
            width: 100%;
            float: none;
            max-width: none;
        }
    }

    .tablet-1 { width: 25%; float: left; }
    .tablet-2 { width: 50%; float: left; }
    .tablet-3 { width: 75%; float: left; }

    .gutter, .gutter-left, .gutter-right { padding: 0; }

}


// Mobile

@media screen and (max-width: 700px) {

    .tablet-1,
    .tablet-2,
    .tablet-3 { width: 100%; float: none; }

    .col-25,
    .col-30,
    .col-33,
    .col-40,
    .col-50,
    .col-60,
    .col-66,
    .col-70,
    .col-75 { width: 100%; float: none; }

    .col { overflow: visible; display: block; }

    .mobile-2 { width: 50%; float: left;}

    .col-left-1,
    .col-left-2,
    .col-left-3,
    .col-left-4,
    .col-left-5,
    .col-left-6,
    .col-left-7,
    .col-left-8,
    .col-left-9,
    .col-left-10,
    .col-left-11,
    .col-left-12 { margin-left: 0; }

    .col-right-1,
    .col-right-2,
    .col-right-3,
    .col-right-4,
    .col-right-5,
    .col-right-6,
    .col-right-7,
    .col-right-8,
    .col-right-9,
    .col-right-10,
    .col-right-11,
    .col-right-12 { margin-right: 0; }

    .padding-top-1,
    .padding-top-2,
    .padding-top-3,
    .padding-top-4,
    .padding-top-5 { padding-top: 1em; }

    .padding-bottom-1,
    .padding-bottom-2,
    .padding-bottom-3,
    .padding-bottom-4,
    .padding-bottom-5 { padding-bottom: 1em; }

    .margin-top-1,
    .margin-top-2,
    .margin-top-3,
    .margin-top-4,
    .margin-top-5 { margin-top: 1em; }

    .margin-bottom-1,
    .margin-bottom-2,
    .margin-bottom-3,
    .margin-bottom-4,
    .margin-bottom-5 { margin-bottom: 1em; }

    .hide-desktop { display: block; }
    .hide-mobile  { display: none; }

}

@media screen and (max-width: 360px) {

    .mobile-2 { width: 100%; float: none;}

}


/* Nicolas Gallagher's micro clearfix */
.row {
    *zoom: 1;
}
.row:before,
.row:after {
    content: " ";
    display: table;
}
.row:after {
    clear: both;
}


/* FIM Grid e Normalizador */
